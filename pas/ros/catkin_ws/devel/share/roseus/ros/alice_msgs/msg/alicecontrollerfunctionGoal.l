;; Auto-generated. Do not edit!


(when (boundp 'alice_msgs::alicecontrollerfunctionGoal)
  (if (not (find-package "ALICE_MSGS"))
    (make-package "ALICE_MSGS"))
  (shadow 'alicecontrollerfunctionGoal (find-package "ALICE_MSGS")))
(unless (find-package "ALICE_MSGS::ALICECONTROLLERFUNCTIONGOAL")
  (make-package "ALICE_MSGS::ALICECONTROLLERFUNCTIONGOAL"))

(in-package "ROS")
;;//! \htmlinclude alicecontrollerfunctionGoal.msg.html


(defclass alice_msgs::alicecontrollerfunctionGoal
  :super ros::object
  :slots (_function _angle _meter _speed ))

(defmethod alice_msgs::alicecontrollerfunctionGoal
  (:init
   (&key
    ((:function __function) "")
    ((:angle __angle) 0.0)
    ((:meter __meter) 0.0)
    ((:speed __speed) 0.0)
    )
   (send-super :init)
   (setq _function (string __function))
   (setq _angle (float __angle))
   (setq _meter (float __meter))
   (setq _speed (float __speed))
   self)
  (:function
   (&optional __function)
   (if __function (setq _function __function)) _function)
  (:angle
   (&optional __angle)
   (if __angle (setq _angle __angle)) _angle)
  (:meter
   (&optional __meter)
   (if __meter (setq _meter __meter)) _meter)
  (:speed
   (&optional __speed)
   (if __speed (setq _speed __speed)) _speed)
  (:serialization-length
   ()
   (+
    ;; string _function
    4 (length _function)
    ;; float32 _angle
    4
    ;; float32 _meter
    4
    ;; float32 _speed
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _function
       (write-long (length _function) s) (princ _function s)
     ;; float32 _angle
       (sys::poke _angle (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _meter
       (sys::poke _meter (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _speed
       (sys::poke _speed (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _function
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _function (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; float32 _angle
     (setq _angle (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _meter
     (setq _meter (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _speed
     (setq _speed (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get alice_msgs::alicecontrollerfunctionGoal :md5sum-) "31ec83cce11f58f31d1b0c418782bdbd")
(setf (get alice_msgs::alicecontrollerfunctionGoal :datatype-) "alice_msgs/alicecontrollerfunctionGoal")
(setf (get alice_msgs::alicecontrollerfunctionGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Goal
string function
float32 angle
float32 meter
float32 speed

")



(provide :alice_msgs/alicecontrollerfunctionGoal "31ec83cce11f58f31d1b0c418782bdbd")


